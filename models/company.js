const sequelizePaginate = require("sequelize-paginate");
module.exports = function(sequelize,DataTypes) {
    const Companies = sequelize.define(
        "companies",
        {
            id:{
                type:DataTypes.INTEGER.UNSIGNED,
                allowNull:false,
                primaryKey:true,
                autoIncrement:true,
            },
            cname:{
                type:DataTypes.STRING(150),
                allowNull:false,
            },
            registerno:{
                type:DataTypes.STRING(10),
                allowNull:false,
            },
            c_email:{
                type:DataTypes.STRING(150),
                allowNull:true,
            },
            phone:{
                type:DataTypes.STRING(100),
                allowNull:true,
            }, 
            phone:{
                type:DataTypes.STRING(100),
                allowNull:true,
            },
            business_sectorid:{
                type:DataTypes.INTEGER.UNSIGNED,
                allowNull:false,
                references:{
                    model:"business_sector",
                    key:"id",
                }
            },
            foreign_invested:{
                type:DataTypes.INTEGER.UNSIGNED
            },
            women_owned:{
                type:DataTypes.INTEGER.UNSIGNED,
                allowNull:false,
                defaultValue: 0,
            },
            address_detail:{
                type:DataTypes.STRING(80),
                allowNull:true,
            },
            locationid:{
                type:DataTypes.INTEGER.UNSIGNED,
                allowNull:true,
                references:{
                    model:"location",
                    key:"id",
                }
            },
            invested_countryid:{
                type:DataTypes.INTEGER.UNSIGNED,
                allowNull:true,
                references:{
                    model:"country",
                    key:"id",
                }
            },
            invest_percent:{
                type:DataTypes.INTEGER,
                allowNull:true
            },
            tax_payment:{
                type:DataTypes.INTEGER,
                allowNull:true
            },
            export_status:{
                type:DataTypes.INTEGER,
                allowNull:true
            },
            contactname:{
                type:DataTypes.STRING(60),
                allowNull:true
            },
            contactpostion:{
                type:DataTypes.STRING(60),
                allowNull:true
            },
            initial_export:{
                type:DataTypes.DECIMAL(10, 2),
                allowNull:true
            },
            ctype:{
                type:DataTypes.INTEGER,
                allowNull:true
            },
            contactname_mon:{
                type:DataTypes.STRING(60),
                allowNull:true
            },
            cname_mon:{
                type:DataTypes.STRING(60),
                allowNull:true
            },
            is_ecaessp:{
                type:DataTypes.INTEGER,
                allowNull:true
            },
            occupationid:{
                type:DataTypes.INTEGER.UNSIGNED,
                allowNull:true,
                references:{
                    model:"occupation",
                    key:"id"
                }
            },
            isactive:{
                type:DataTypes.INTEGER,
                allowNull:false,
                defaultValue: 1
            },
            state_registerno:{
                type:DataTypes.STRING(10),
                allowNull:true
            },
            isexport_sinceinsure:{
                type:DataTypes.INTEGER,
                allowNull:true
            },
            modified_user:{
                type:DataTypes.STRING(20),
                allowNull:true
            },
            esm:{
                type:DataTypes.STRING(2),
                allowNull:true
            },
            
        },
        {
            tableName:"companies"
        }
    )
    sequelizePaginate.paginate(Companies);
    return Companies;
}